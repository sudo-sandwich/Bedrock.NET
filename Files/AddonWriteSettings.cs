using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Text;

namespace Bedrock.Files {
    public class AddonWriteSettings {
        internal static readonly AddonWriteSettings Default = new AddonWriteSettings();

        public Formatting Formatting { get; set; } = Formatting.Indented;
        public char IndentChar { get; set; } = ' ';
        public int Indentation { get; set; } = 2;

        public string JsonHeader { get; set; } = "// Generated by Bedrock.NET";
        public string MCFunctionHeader { get; set; } = "# Generated by Bedrock.NET";

        public bool ShouldEraseOldBedrockFilesWithHeader { get; set; } = false;
        public string EraseOldJsonHeader { get; set; } = "// Generated by Bedrock.NET";
        public string EraseOldMCFunctionHeader { get; set; } = "# Generated by Bedrock.NET";

        public string FunctionPath { get; set; } = "functions";
        public string FunctionExtension { get; set; } = "";
        public bool UseFunctionExtension { get; set; } = false;
        public string ServerAnimationControllerPath { get; set; } = "animation_controllers";
        public string ServerAnimationControllerExtension { get; set; } = ".animation_controllers";
        public bool UseServerAnimationControllerExtension { get; set; } = true;
        public string ServerAnimationTimelinePath { get; set; } = "animations";
        public string ServerAnimationTimelineExtension { get; set; } = ".animations";
        public bool UseServerAnimationTimelineExtension { get; set; } = true;
        public string ServerEntityPath { get; set; } = "entities";
        public string ServerEntityExtension { get; set; } = ".behavior";
        public bool UseServerEntityExtension { get; set; } = true;
        public string ClientAnimationControllerPath { get; set; } = "animation_controllers";
        public string ClientAnimationControllerExtension { get; set; } = ".animation_controllers";
        public bool UseClientAnimationControllerExtension { get; set; } = true;
        public string ClientAnimationTimelinePath { get; set; } = "animations";
        public string ClientAnimationTimelineExtension { get; set; } = ".animations";
        public bool UseClientAnimationTimelineExtension { get; set; } = true;
        public string ClientEntityPath { get; set; } = "entity";
        public string ClientEntityExtension { get; set; } = ".entity";
        public bool UseClientEntityExtension { get; set; } = true;
        public string RenderControllerPath { get; set; } = "render_controllers";
        public string RenderControllerExtension { get; set; } = ".render_controllers";
        public bool UseRenderControllerExtension { get; set; } = true;

        public void SetAllExtensionsEnabled(bool val) {
            UseFunctionExtension = val;
            UseServerAnimationControllerExtension = val;
            UseServerAnimationTimelineExtension = val;
            UseServerEntityExtension = val;
            UseClientAnimationControllerExtension = val;
            UseClientAnimationTimelineExtension = val;
            UseClientEntityExtension = val;
            UseRenderControllerExtension = val;
        }
    }
}
